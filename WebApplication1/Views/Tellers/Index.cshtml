


@using WebApplication1.Models
@model WebApplication1.ViewModels.TellerViewModel
@{
    ViewBag.Title = "Index";
    if (User.IsInRole(RoleName.ADMIN_ROLE))
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_UserLayout.cshtml";
    }
}
@{
    if (User.IsInRole(RoleName.ADMIN_ROLE) || User.IsInRole(RoleName.USER_ROLE))
    {
        @Html.Partial("_AddTellerModal")
    }

}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 class="underline animated fadeInLeft">Teller Management</h1>
        </div>
    </div>
</div>
<div class="row margin-vertical">

    <div class="container bg-white shadow">

        <div class="row  padding-horizontal">
            <div class="col-md-6 col-sm-6 col-xs-6 align-left" style="padding-top: 35px;">
                <p class=" grey-color animated fadeInRight "><span id="count">@Model.count</span> Tellers</p>

            </div>
            <div class="col-md-6 col-sm-6 col-xs-6 align-right">
                @{
                    if (User.IsInRole(RoleName.ADMIN_ROLE) || User.IsInRole(RoleName.USER_ROLE))
                    {
                        <button id="myOpenTellerModalBtn">Add new Teller</button>
                    }

                }
            </div>

        </div>




        <div class="row padding-horizontal">

            <table id="tellers" class="table table-striped table-responsive small-text animated fadeInUp ">
                <thead class="padding-vertical">
                    <tr>
                        <th>User Name</th>
                        <th>Till Account</th>
                        <th>Till Account Balance</th>

                    </tr>
                </thead>

                <tbody></tbody>
            </table>
        </div>


    </div>

</div>


@section scripts
{
    <script>


        $(document).ready(function () {

            $('#myOpenTellerModalBtn').on('click', function () {
                $('#myAddTellerModal').fadeIn(0, function () {
                    $(this).addClass('fadeInDown');
                    $("select:visible:first").focus();
                });
            });
            var table = $("#tellers").DataTable({
                ajax: {
                    url: "/api/tellers",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "userTeller.fullName"
                    },
                    {
                        data: "tillAccount.name"
                    },
                    {
                        data: "tillAccountBalance"
                    }
                ]
            });
            table.ajax.reload(function () {
                $('#count').html(table.data().count());
            });
            $("#myAddTellerBtn").on("click",
                function (e) {

                    e.preventDefault();
                    userId = $("#userId").val();
                    tillAccountId = $("#tillAccountId").val();
                    alert($("#tillAccountId").text());
                    if (userId == 0) {
                        $('#myAddTellerModal #errorMessage').fadeIn();
                        $('#myAddTellerModal #errorMessage').html("Please Select a User");
                        return;
                    }
                    if (tillAccountId == 0) {
                        //                        if ($('#tillAccountId').text().contains( "No Available Till Accounts")) {
                        //                            $('#myAddTellerModal #errorMessage').fadeIn();
                        //                            $('#myAddTellerModal #errorMessage').html("All Accounts Are Currently Assigned To A User");
                        //                            return;
                        //                        }
                        $('#myAddTellerModal #errorMessage').fadeIn();
                        $('#myAddTellerModal #errorMessage').html("Please Select a Till Account");
                        return;
                    }
                    alert("Till Account Id : " +
                        tillAccountId +
                        ", User Id : " +
                        userId);

                    var tellerDto = {
                        UserTellerId: userId,
                        TillAccountId: tillAccountId,
                        IsAssigned: true
                    };

                    $.ajax({
                        type: 'POST',
                        url: '/api/Tellers/AssignTeller',
                        data: JSON.stringify(tellerDto),
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        success: function (data) {


                            $('#myAddTellerModal #successMessage').fadeIn(200,
                                function () {
                                    document.getElementById('tellerForm').reset();

                                    $('#myAddTellerModal #successMessage').html(data)
                                });
                            return;


                        },
                        error: function (errorMessage) {
                            // alert('request failed');
                            //                            var msg = JSON.stringify(errorMessage);
                            var msg = JSON.parse(errorMessage.responseText);

                            $('#myAddTellerModal #errorMessage').fadeIn(200,
                                function () { $('#myAddTellerModal #errorMessage').html(msg.message) });
                        }

                    });


                });

            $('#myAddTellerModal .close').on('click',
                function () {

                    table.ajax.reload(function () {
                        $('#count').html(table.data().count());
                        $('#myAddTellerModal').fadeOut();
                    });

                });

            $("#tellers ").on("click",
                "js-delete",
                function () {
                    var button = $(this);
                    //alert("Delete");
                    bootbox.confirm("Are you sure you want to delete this branch",
                        function () {
                            if (result) {
                                $.ajax({
                                    url: "api/branches/" + button.attr("data-branch-id"),
                                    method: "DELETE",
                                    success: function () {
                                        table.row(button.parents("tr")).remove().draw();
                                    }
                                });
                            }
                        });
                });

        });
    </script>
}


